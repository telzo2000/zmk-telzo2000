/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&soft_off {
    hold-time-ms = <1000>; // Only turn off it the key is held for 1 seconds or longer.
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_delete {
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp DELETE>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };

        combo_GUI {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp LGUI>;
        };

        combo_BTLayer {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&mo 4>;
        };
    };

keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q  &kp W     &kp E    &kp R    &kp T                     &kp Y  &kp U    &kp I     &kp O   &kp P     &kp BSPC
                &kp A  &kp S     &kp D    &kp F    &kp G                     &kp H  &kp J    &kp K     &kp L   &kp RET
                &kp Z  &kp X     &kp C    &kp V    &kp B                     &kp N  &kp M    &kp COMMA &kp DOT &kp LSHFT
                &kp LCTRL &kp LGUI &lt 1 SPACE                              &lt 2 SPACE &kp LALT &kp BSPC          
            >;
        };

        layer1 {
            bindings = <
                &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 3    &bt BT_SEL 4    &kp T                     &kp Y  &kp U    &kp I     &kp O   &kp P     &kp BSPC
                &soft_off  &kp S     &kp D    &kp F    &kp G                     &kp H  &kp J    &kp K     &kp L   &kp RET
                &kp Z  &kp X     &kp C    &kp V    &kp B                     &kp N  &kp M    &kp COMMA &kp DOT &kp LSHFT
                &kp LCTRL &kp LGUI &lt 1 SPACE                              &lt 2 SPACE &kp LALT &kp BSPC   
            >;
        };

        layer2 {
            bindings = <
                &kp 1  &kp 2     &kp 3    &kp 4    &kp 5                     &kp 6  &kp 7    &kp 8     &kp 9   &kp 0     &kp BSPC
                &kp A  &kp S     &kp D    &kp F    &kp G                     &kp H  &kp J    &kp K     &kp L   &kp RET
                &kp Z  &kp X     &kp C    &kp V    &kp B                     &kp N  &kp M    &kp COMMA &kp DOT &kp LSHFT
                &kp LCTRL &kp LGUI &lt 1 SPACE                              &lt 2 SPACE &kp LALT &kp BSPC   
            >;
        };

        layer3 {
            bindings = <
                 &kp Q  &kp W     &kp E    &kp R    &kp T                     &kp Y  &kp U    &kp I     &kp O   &kp P     &kp BSPC
                &kp A  &kp S     &kp D    &kp F    &kp G                     &kp H  &kp J    &kp K     &kp L   &kp RET
                &kp Z  &kp X     &kp C    &kp V    &kp B                     &kp N  &kp M    &kp COMMA &kp DOT &kp LSHFT
                &kp LCTRL &kp LGUI &lt 1 SPACE                              &lt 2 SPACE &kp LALT &kp BSPC   
            >;
        };

        layer4 {
            bindings = <
                           &kp Q  &kp W     &kp E    &kp R    &kp T                     &kp Y  &kp U    &kp I     &kp O   &kp P     &kp BSPC
                &kp A  &kp S     &kp D    &kp F    &kp G                     &kp H  &kp J    &kp K     &kp L   &kp RET
                &kp Z  &kp X     &kp C    &kp V    &kp B                     &kp N  &kp M    &kp COMMA &kp DOT &kp LSHFT  
                &kp LCTRL &kp LGUI &lt 1 SPACE                              &lt 2 SPACE &kp LALT &kp BSPC 
            >;
        };
    };
};
